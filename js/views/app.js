// Generated by CoffeeScript 1.6.3
(function() {
  var ENTER_KEY, app;

  if (window.app == null) {
    window.app = {};
  }

  app = window.app;

  ENTER_KEY = 13;

  app.appView = Backbone.View.extend({
    el: '#taskapp',
    statsTemplate: _.template($('#stats-template').html()),
    events: {
      'keypress #new-task': 'createOnEnter',
      'click #clear-completed': 'clearCompleted',
      'click #toggle-all': 'toggleAllComplete'
    },
    initialize: function() {
      this.allCheckbox = this.$('#toggle-all')[0];
      this.$input = this.$('#new-task');
      this.$footer = this.$('#footer');
      this.$main = this.$('#main');
      this.listenTo(app.tasks, 'add', this.addOne);
      this.listenTo(app.tasks, 'reset', this.addAll);
      this.listenTo(app.tasks, 'change:completed', this.filterOne);
      this.listenTo(app.tasks, 'filter', this.filterAll);
      this.listenTo(app.tasks, 'all', this.render);
      return app.tasks.fetch();
    },
    render: function() {
      var completed, remaining;
      completed = app.tasks.completed().length;
      remaining = app.tasks.remaining().length;
      if (app.tasks.length) {
        this.$main.show();
        this.$footer.show();
        this.$footer.html(this.statsTemplate({
          completed: completed,
          remaining: remaining
        }));
        this.$('#filters li a').removeClass('selected').filter("[href=\"#/" + (app.taskFilter || '') + "\"]").addClass('selected');
      } else {
        this.$main.hide();
        this.$footer.hide();
      }
      return this.allCheckbox.checked = !remaining;
    },
    addOne: function(task) {
      var view;
      view = new app.taskView({
        model: task
      });
      return $('#task-list').append(view.render().el);
    },
    addAll: function() {
      this.$('#task-list').html('');
      return app.tasks.each(this.addOne, this);
    },
    filterOne: function(task) {
      return task.trigger('visible');
    },
    filterAll: function() {
      return app.tasks.each(this.filterOne, this);
    },
    newAttributes: function() {
      return {
        title: this.$input.val().trim(),
        order: app.tasks.nextOrder(),
        completed: false
      };
    },
    createOnEnter: function(event) {
      if (event.which === ENTER_KEY && this.$input.val().trim()) {
        app.tasks.create(this.newAttributes());
        return this.$input.val('');
      }
    },
    clearCompleted: function() {
      _.invoke(app.tasks.completed(), 'destroy');
      return false;
    },
    toggleAllComplete: function() {
      var completed;
      completed = this.allCheckbox.checked;
      return app.tasks.each(function(task) {
        return task.save({
          'completed': completed
        });
      });
    }
  });

}).call(this);

/*
//@ sourceMappingURL=app.map
*/
